name: Deploy to AWS ECS
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ecr
  ECS_SERVICE: ecs
  ECS_CLUSTER: ecs
  CONTAINER_NAME: ecr
  ENV_DEV: dev

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: yarn
      - run: yarn build
      - run: yarn test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
        
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          ENV: ${{env.ENV_DEV}}
        run: |
          # Build a docker container and
          # push it ECR so that it can
          # be deployed to ECS
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_$ENV:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_$ENV:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY_$ENV:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition service \
          --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{env.CONTAINER_NAME}}_${{env.ENV_DEV}}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}_${{env.ENV_DEV}}
          cluster: ${{ env.ECS_CLUSTER }}_${{env.ENV_DEV}}
          wait-for-service-stability: true